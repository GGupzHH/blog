(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{423:function(t,v,_){"use strict";_.r(v);var l=_(2),a=Object(l.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("本文介绍"),v("code",[t._v("Dart")]),t._v("的事件循环机制。\n")]),t._v(" "),v("h3",{attrs:{id:"dart-事件循环机制"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#dart-事件循环机制"}},[t._v("#")]),t._v(" Dart 事件循环机制")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("Dart "),v("code",[t._v("单线程")])]),t._v(" "),v("ul",[v("li",[t._v("其核心分为"),v("code",[t._v("主线程")]),t._v("、"),v("code",[t._v("微任务")]),t._v("、"),v("code",[t._v("宏任务")]),t._v("。")]),t._v(" "),v("li",[v("code",[t._v("主线程")]),t._v("：执行主业务逻辑，网络I/O、本地文件I/O，异步事件等相关任务事件；")]),t._v(" "),v("li",[t._v("事件队列：\n"),v("ul",[v("li",[v("code",[t._v("微任务队列")]),t._v("：包含有 Dart 内部的微任务，主要是通过 scheduleMicrotask 来调度。")]),t._v(" "),v("li",[v("code",[t._v("事件队列")]),t._v("：包含外部事件，例如 I/O 、 Timer ，绘制事件等等。")])])])])]),t._v(" "),v("li",[v("p",[t._v("事件循环")]),t._v(" "),v("ul",[v("li",[t._v("开始执行main函数，并会产品两个任务队列；")]),t._v(" "),v("li",[t._v("判断是否存在微任务，有则执行，执行完成后在继续判断是否还存在微任务，无则判断是否存在事件任务；")]),t._v(" "),v("li",[t._v("如果不存在微任务，则判断是否存在事件任务，有则执行，没有则判断是否有新的微任务；")]),t._v(" "),v("li",[t._v("在微任务和事件任务执行的过程中，一样会产生新的微任务和事件任务，因此需要再次判断是否需要插入队列；")])])]),t._v(" "),v("li",[v("p",[t._v("事件循环是否会阻塞")]),t._v(" "),v("div",{staticClass:"custom-block warning"},[v("p",{staticClass:"title"},[t._v("任务执行是否会阻塞呢？")]),v("p",[t._v("Dart 运行过程中也会被一些耗时任务阻塞")])])]),t._v(" "),v("li",[v("p",[t._v("lsolate 多线程")]),t._v(" "),v("div",{staticClass:"custom-block tip"},[v("p",{staticClass:"title"},[t._v("lsolate 多线程")]),v("p",[t._v("Dart 的单线程叫做isolate线程，每个isolate线程之间是不共享内存的，通过消息机制通信。")])])])])])}),[],!1,null,null,null);v.default=a.exports}}]);